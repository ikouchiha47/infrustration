stages:
  - validate_plan
  - apply
  - destroy

.template:
  image:
    name: hashicorp/terraform:1.7.1
    entrypoint: [""]
  before_script:
    - apk add --no-cache bash py-pip
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install --upgrade pip awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - export TF_VAR_AWS_ACCOUNT=${AWS_ACCOUNT}
    - export TF_VAR_AWS_REGION=${AWS_DEFAULT_REGION}
    - export TF_VAR_AWS_PROFILE=${AWS_DEFAULT_PROFILE}


validate and plan infra:
  extends: .template
  stage: validate_plan
  script:
    - export TF_VAR_APP_NAME=talon-server
    - export TF_VAR_PARAM_PREFIX=talon/apiserver
    - export TF_VAR_ENVIRONMENT=prod
    - export AWS_PROFILE=${AWS_DEFAULT_PROFILE}
    - terraform init -backend-config=./infra.hcl
    - terraform validate
    - terraform plan 
  when: manual


create infra:
  extends: .template
  stage: apply
  script:
    - export TF_VAR_APP_NAME=talon-server
    - export TF_VAR_PARAM_PREFIX=talon/apiserver
    - export TF_VAR_ENVIRONMENT=prod
    - export AWS_PROFILE=${AWS_DEFAULT_PROFILE}
    - terraform init -backend-config=./infra.hcl
    - terraform apply -auto-approve
  when: manual

validate talon server:
  extends: .template
  stage: validate_plan
  variables:
    TF_ROOT: modules/services
  script:
    - export TF_VAR_APP_NAME=talon-server
    - export TF_VAR_PARAM_PREFIX=talon/apiserver
    - export TF_VAR_ENVIRONMENT=prod
    - export AWS_PROFILE=${AWS_DEFAULT_PROFILE}
    - terraform -chdir=modules/services init -backend-config=./talon.hcl && \
      terraform -chdir=modules/services validate && \
      terraform -chdir=modules/services plan
  when: manual


apply talon server:
  extends: .template
  stage: apply
  variables:
    TF_ROOT: modules/services
  script:
    - export TF_VAR_APP_NAME=talon-server
    - export TF_VAR_PARAM_PREFIX=talon/apiserver
    - export TF_VAR_ENVIRONMENT=prod
    - export AWS_PROFILE=${AWS_DEFAULT_PROFILE}
    - terraform -chdir=modules/services init -backend-config=./talon.hcl && \
      terraform -chdir=modules/services apply -auto-approve
  when: manual

destroy talon sever:
  extends: .template
  stage: destroy
  variables:
    TF_ROOT: modules/services
  script:
    - export TF_VAR_APP_NAME=talon-server
    - export TF_VAR_PARAM_PREFIX=talon/apiserver
    - export TF_VAR_ENVIRONMENT=prod
    - export AWS_PROFILE=${AWS_DEFAULT_PROFILE}
    - terraform -chdir=modules/services init -backend-config=./talon.hcl && \ 
      terraform -chdir=modules/services destroy -auto-approve
  when: manual
